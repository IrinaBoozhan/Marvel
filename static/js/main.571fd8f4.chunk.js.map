{"version":3,"sources":["components/Header/Header.jsx","components/Header/index.js","units/getResource.js","units/constants.js","components/Pagination/index.js","components/Pagination/Pagination.jsx","components/Characters/Characters.jsx","components/Characters/index.js","components/Comics/Comics.jsx","components/Comics/index.js","components/Events/Events.jsx","components/Events/index.js","components/Series/Series.jsx","components/Series/index.js","components/Creators/Creators.jsx","components/Creators/index.js","components/Stories/Stories.jsx","components/Stories/index.js","App.js","index.js"],"names":["nav","name","url","Header","useState","isActive","setActive","handleToggle","console","log","className","map","item","to","onClick","itemList","MarvelServies","a","fetch","res","json","list","itemsList","data","results","offset","charactersList","comicsList","eventsList","seriesList","storiesList","creatorsList","props","id","character","marvel","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","Characters","posts","setPosts","currentPage","setCurrentPage","setOffset","increment","decrement","useEffect","getPosts","getAllCharacters","post","lastPostIndex","firstPostIndex","currentPost","slice","pageNumber","value","setValue","filterCharacters","filter","toLowerCase","includes","type","placeholder","onChange","e","target","src","thumbnail","path","alt","description","modified","comics","available","items","it","events","series","stories","length","Comics","getAllComics","title","format","pageCount","characters","creators","Events","getAllEvents","li","role","Series","getAllSeries","endYear","Creators","getAllCreators","fullName","Stories","getAllStories","originalIssue","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.571fd8f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst nav = [\r\n   {\r\n      name: 'Characters',\r\n      url: 'characters',\r\n   },\r\n   {\r\n      name: 'Comics',\r\n      url: 'comics',\r\n   },\r\n   {\r\n      name: 'Series',\r\n      url: 'series',\r\n   },\r\n   {\r\n      name: 'Events',\r\n      url: 'events',\r\n   }, {\r\n      name: 'Stories',\r\n      url: 'stories',\r\n   },\r\n   {\r\n      name: 'Creators',\r\n      url: 'creators',\r\n   },\r\n\r\n]\r\n\r\nconst Header = () => {\r\n\r\n   const [isActive, setActive] = useState(\"false\");\r\n\r\n   const handleToggle = () => {\r\n      setActive(!isActive);\r\n      console.log(\"!\")\r\n   };\r\n\r\n\r\n   return (\r\n      <header>\r\n\r\n         <nav className=\"navHeader\">\r\n            {\r\n               nav.map(item =>\r\n\r\n                  <Link to={item.url}    >\r\n                     <span className={isActive ? \"app\" : null} onClick={handleToggle} >\r\n                        {item.name}\r\n                     </span>\r\n                  </Link>\r\n               )\r\n            }\r\n\r\n         </nav>\r\n      </header >\r\n   )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;","import { CHARACTERS, COMICS, SERIES, EVENTS, STORIES, CREATORS } from './constants';\r\nimport { config } from './config'\r\n\r\nlet itemList = [CHARACTERS, COMICS, SERIES, EVENTS, STORIES, CREATORS];\r\n\r\n\r\nclass MarvelServies {\r\n\r\n   async getAllItems(item) {\r\n      const res = await fetch(`http://gateway.marvel.com/v1/public/${item}}?offset=0&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n      const itemsList = list.data.results;\r\n\r\n      return itemsList;\r\n   }\r\n\r\n   async getAllCharacters(offset) {\r\n\r\n\r\n      const res = await fetch(`http://gateway.marvel.com/v1/public/characters?offset=${offset}&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n      const charactersList = list.data.results;\r\n      return charactersList;\r\n   }\r\n\r\n\r\n\r\n\r\n   async getAllComics(offset) {\r\n\r\n      const res = await\r\n         fetch(`http://gateway.marvel.com/v1/public/${itemList[1]}?offset=${offset}&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n      const comicsList = list.data.results;\r\n      return comicsList;\r\n   }\r\n\r\n   async getAllEvents(offset) {\r\n      const res = await\r\n         fetch(`http://gateway.marvel.com/v1/public/${itemList[3]}?offset=${offset}&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n      const eventsList = list.data.results;\r\n\r\n      return eventsList;\r\n   }\r\n\r\n   async getAllSeries(offset) {\r\n      const res = await\r\n         fetch(`http://gateway.marvel.com/v1/public/${itemList[2]}?offset=${offset}&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n      const seriesList = list.data.results;\r\n      return seriesList;\r\n   }\r\n\r\n   async getAllStories(offset) {\r\n      const res = await\r\n         fetch(`http://gateway.marvel.com/v1/public/${itemList[4]}?offset=${offset}&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n\r\n      const storiesList = list.data.results;\r\n      return storiesList;\r\n   }\r\n\r\n\r\n   async getAllCreators(offset) {\r\n      const res = await\r\n         fetch(`http://gateway.marvel.com/v1/public/${itemList[5]}?offset=${offset}&limit=100&ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const list = await res.json();\r\n      const creatorsList = list.data.results;\r\n\r\n      return creatorsList;\r\n   }\r\n\r\n\r\n   async getCharacterById(props) {\r\n      const res = await\r\n         fetch(`http://gateway.marvel.com/v1/public/${itemList[0]}/${props.id}?ts=1&apikey=0b0803a2316ccbf89ded47f8000fccf4&hash=1006ba6ba4aa9b24eb1f60af0838bf9e`);\r\n      const character = await res.json();\r\n      return character;\r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst marvel = new MarvelServies()\r\nexport default marvel;\r\n\r\n\r\n\r\n\r\n\r\n","export const CHARACTERS = 'characters';\r\nexport const COMICS = 'comics';\r\nexport const EVENTS = 'events';\r\nexport const SERIES = 'series';\r\nexport const STORIES = 'stories';\r\nexport const CREATORS = 'creators';\r\n\r\n\r\n\r\n","import Pagination from \"./Pagination\";\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport './Pagination.css';\r\n\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, offset }) => {\r\n  const pageNumbers = []\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <nav className='pagination'>\r\n      <ul>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='paginationItem'>\r\n            <button onClick={() => paginate(number)}>{number * 20 + offset}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport marvel from '../../units/getResource';\r\nimport './Characters.css';\r\nimport Pagination from '../Pagination';\r\n\r\nconst Characters = () => {//\r\n\r\n\r\n   const [posts, setPosts] = useState([])\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [postsPerPage] = useState(20)\r\n\r\n   //Пагинация\r\n\r\n   //загрузка +100\r\n   const [offset, setOffset] = useState(0)\r\n\r\n   function increment() {\r\n      setOffset(offset + 100);\r\n   }\r\n   function decrement() {\r\n      setOffset(offset - 100);\r\n   }\r\n\r\n   useEffect(() => {\r\n      const getPosts = async () => {\r\n         const post = await marvel.getAllCharacters(offset) //нужна общая функция\r\n         setPosts(post)\r\n      }\r\n      getPosts()\r\n   }, [offset])\r\n\r\n\r\n\r\n   const lastPostIndex = currentPage * postsPerPage;\r\n   const firstPostIndex = lastPostIndex - postsPerPage;\r\n   const currentPost = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n   const paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n\r\n   //Поиск по имени\r\n   const [value, setValue] = useState('');\r\n   const filterCharacters = posts.filter(posts => {\r\n      return posts.name.toLowerCase().includes(value.toLowerCase())  //item\r\n   })\r\n\r\n\r\n   if (value)\r\n      return (\r\n         <div>\r\n            <div className='form'>\r\n               <form className='searchForm'>\r\n                  <input\r\n                     type='text'\r\n                     className='searchInput'\r\n                     placeholder='Search characters'\r\n                     onChange={(e) => { setValue(e.target.value) }}\r\n                  />\r\n               </form>\r\n            </div>\r\n\r\n            <ul className='charactersList'>\r\n               {filterCharacters.map(item =>\r\n                  <li key={item.id} className='characterCard' >\r\n\r\n                     <h3>{item.name} (id: {item.id})</h3>\r\n\r\n                     <div className='info'>\r\n\r\n                        <div className='imgInfo'>\r\n                           <img src={`${item.thumbnail.path}.jpg`} alt={item.name} />\r\n                        </div>\r\n\r\n                        <div className='textInfo'>\r\n                           <p><span>Description:</span> {item.description}</p>\r\n                           <p><span>Modified:</span> {item.modified}</p>\r\n\r\n                           <details><summary><span>Commics with {item.name}:</span> {item.comics.available}</summary>{item.comics.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                           <details><summary><span>Events: </span>{item.events.available}</summary>{item.events.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                           <details><summary><span>Series: </span>{item.series.available}</summary>{item.series.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                           <details><summary><span>Stories: </span>{item.stories.available}</summary>{item.stories.items.map(it => <li>- {it.name}</li>)}</details>\r\n                        </div>\r\n\r\n                     </div>\r\n                  </li>\r\n               )\r\n               }\r\n            </ul >\r\n         </div >\r\n\r\n      )\r\n\r\n   else return (\r\n      <div>\r\n\r\n         <div className='form'>\r\n            <form className='searchForm'>\r\n               <input\r\n                  type='text'\r\n                  className='searchInput'\r\n                  placeholder='Search characters'\r\n                  onChange={(e) => { setValue(e.target.value) }}\r\n               />\r\n            </form>\r\n         </div>\r\n\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 1500) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n\r\n\r\n         <ul className='charactersList'>\r\n            {currentPost.map(item =>\r\n               <li key={item.id} className='characterCard' >\r\n\r\n                  <h3>{item.name} (id: {item.id})</h3>\r\n\r\n                  <div className='info'>\r\n\r\n                     <div className='imgInfo'>\r\n                        <img src={`${item.thumbnail.path}.jpg`} alt={item.name} />\r\n                     </div>\r\n\r\n                     <div className='textInfo'>\r\n                        <p><span>Description:</span> {item.description}</p>\r\n                        <p><span>Modified:</span> {item.modified}</p>\r\n\r\n                        <details><summary><span>Commics with {item.name}:</span> {item.comics.available}</summary>{item.comics.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Events: </span>{item.events.available}</summary>{item.events.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Series: </span>{item.series.available}</summary>{item.series.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Stories: </span>{item.stories.available}</summary>{item.stories.items.map(it => <li>- {it.name}</li>)}</details>\r\n                     </div>\r\n\r\n                  </div>\r\n               </li>\r\n            )\r\n            }\r\n\r\n         </ul >\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 1500) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n      </div >);\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Characters;\r\n","import Characters from \"./Characters\";\r\n\r\nexport default Characters;","import React, { useEffect, useState } from 'react';\r\nimport marvel from '../../units/getResource';\r\nimport './Comics.css';\r\nimport Pagination from '../Pagination';\r\n\r\n\r\n\r\nconst Comics = () => {\r\n   const [posts, setPosts] = useState([])\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [postsPerPage] = useState(20)\r\n\r\n   //Пагинация\r\n\r\n   const [offset, setOffset] = useState(0)\r\n\r\n   function increment() {\r\n      setOffset(offset + 100);\r\n   }\r\n   function decrement() {\r\n      setOffset(offset - 100);\r\n   }\r\n\r\n   useEffect(() => {\r\n      const getPosts = async () => {\r\n         const post = await marvel.getAllComics(offset) //нужна общая функция\r\n         setPosts(post)\r\n      }\r\n      getPosts()\r\n   }, [offset])\r\n\r\n\r\n   const lastPostIndex = currentPage * postsPerPage;\r\n   const firstPostIndex = lastPostIndex - postsPerPage;\r\n   const currentPost = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n   const paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n\r\n   return (\r\n      <div>\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 49496) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n         <ul className='charactersList'>\r\n            {currentPost.map(item =>\r\n               <li className='characterCard' >\r\n\r\n                  <h3>{item.title} (id:{item.id})</h3>\r\n\r\n                  <div className='info'>\r\n\r\n                     <div className='imgInfo'>\r\n                        <img src={`${item.thumbnail.path}.jpg`} alt={item.title} />\r\n                     </div>\r\n\r\n                     <div className='textInfo'>\r\n\r\n                        <p><span>Description:</span> {item.description}</p>\r\n                        <p><span>Format: </span> {item.format}</p>\r\n                        <p><span>Page count:</span>{item.pageCount}</p>\r\n\r\n                        <details><summary><span>Characters:</span> {item.characters.available}</summary>{item.characters.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Creators:</span> {item.creators.available}</summary>{item.creators.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Series: </span>1</summary><li>{item.series.name}</li></details>\r\n\r\n                        <details><summary><span>Stories: </span>{item.stories.available}</summary>{item.stories.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                     </div>\r\n                  </div>\r\n\r\n               </li>)\r\n\r\n            }\r\n\r\n         </ul >\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 49496) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Comics;","import Comics from \"./Comics\";\r\n\r\nexport default Comics;","import React, { useEffect, useState } from 'react';\r\nimport marvel from '../../units/getResource';\r\nimport './Events.css';\r\nimport Pagination from '../Pagination';\r\n\r\nconst Events = () => {\r\n\r\n\r\n   const [posts, setPosts] = useState([])\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [postsPerPage] = useState(20)\r\n\r\n   //Пагинация\r\n\r\n   const [offset, setOffset] = useState(0)\r\n\r\n\r\n   useEffect(() => {\r\n      const getPosts = async () => {\r\n         const post = await marvel.getAllEvents(offset) //нужна общая функция\r\n         setPosts(post)\r\n      }\r\n      getPosts()\r\n   }, [offset])\r\n\r\n\r\n   const lastPostIndex = currentPage * postsPerPage;\r\n   const firstPostIndex = lastPostIndex - postsPerPage;\r\n   const currentPost = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n   const paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div>\r\n         <div className=\"wrapperPagination\">\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n         </div>\r\n         <ul className='charactersList'>\r\n            {currentPost.map(item =>\r\n               <li li className='characterCard' >\r\n\r\n                  <h3>{item.title} (id: {item.id})</h3>\r\n\r\n                  <div className='info'>\r\n\r\n                     <div className='imgInfo'>\r\n                        <img src={`${item.thumbnail.path}.jpg`} alt={item.title} />\r\n                     </div>\r\n\r\n                     <div className='textInfo'>\r\n\r\n                        <p><span>Description:</span> {item.description}</p>\r\n                        <p><span>Modified:</span> {item.modified}</p>\r\n\r\n\r\n                        <details><summary> <span>Characters: </span> {item.characters.available}</summary>{item.characters.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Comics: </span> {item.comics.available}</summary>{item.comics.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Series: </span> {item.series.available}</summary>{item.series.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Stories: </span> {item.stories.available}</summary>{item.stories.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Creators: </span> {item.creators.available}</summary>{item.creators.items.map(it => <li>- {it.role} {it.name}</li>)}</details>\r\n\r\n                     </div>\r\n                  </div>\r\n               </li>)\r\n\r\n            }\r\n\r\n         </ul >\r\n         <div className=\"wrapperPagination\">\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n         </div>\r\n      </div>);\r\n\r\n}\r\n\r\nexport default Events;","import Events from \"./Events\";\r\n\r\nexport default Events;","import React, { useEffect, useState } from 'react';\r\nimport marvel from '../../units/getResource';\r\nimport './Series.css';\r\nimport Pagination from '../Pagination';\r\n\r\nconst Series = () => {\r\n\r\n\r\n   const [posts, setPosts] = useState([])\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [postsPerPage] = useState(20)\r\n\r\n   //Пагинация\r\n\r\n   //загрузка +100\r\n   const [offset, setOffset] = useState(0)\r\n\r\n   function increment() {\r\n      setOffset(offset + 100);\r\n   }\r\n   function decrement() {\r\n      setOffset(offset - 100);\r\n   }\r\n\r\n   useEffect(() => {\r\n      const getPosts = async () => {\r\n         const post = await marvel.getAllSeries(offset) //нужна общая функция\r\n         setPosts(post)\r\n      }\r\n      getPosts()\r\n   }, [offset])\r\n\r\n\r\n   const lastPostIndex = currentPage * postsPerPage;\r\n   const firstPostIndex = lastPostIndex - postsPerPage;\r\n   const currentPost = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n   const paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div>\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 12425) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n         <ul className='charactersList'>\r\n            {currentPost.map(item =>\r\n               <li li className='characterCard' >\r\n\r\n                  <h3>{item.title} (id: {item.id})</h3>\r\n\r\n                  <div className='info'>\r\n\r\n                     <div className='imgInfo'>\r\n                        <img src={`${item.thumbnail.path}.jpg`} alt={item.title} />\r\n                     </div>\r\n\r\n                     <div className='textInfo'>\r\n\r\n                        <p><span>Description:</span> {item.description}</p>\r\n                        <p><span>Start-End: </span> {item.endYear} - {item.endYear}</p>\r\n                        <p><span>Type: </span> {item.type}</p>\r\n\r\n\r\n                        <details><summary> <span>Characters: </span> {item.characters.available}</summary>{item.characters.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Comics: </span> {item.comics.available}</summary>{item.comics.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Events: </span> {item.events.available}</summary>{item.events.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Stories: </span> {item.stories.available}</summary>{item.stories.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                     </div>\r\n                  </div>\r\n               </li>)\r\n\r\n            }\r\n\r\n         </ul >\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 12425) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Series;","import Series from \"./Series\";\r\n\r\nexport default Series;","import React, { useEffect, useState } from 'react';\r\nimport marvel from '../../units/getResource';\r\nimport './Creators.css';\r\nimport Pagination from '../Pagination';\r\n\r\n// let imgCharacter = `${getMarvelResource.data.results[1].thumbnail.path}.${getMarvelResource.data.results[1].thumbnail.extension}`;\r\n\r\n\r\nconst Creators = () => {\r\n   const [posts, setPosts] = useState([])\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [postsPerPage] = useState(20)\r\n\r\n   //Пагинация\r\n\r\n   //загрузка +100\r\n   const [offset, setOffset] = useState(0)\r\n\r\n   function increment() {\r\n      setOffset(offset + 100);\r\n   }\r\n   function decrement() {\r\n      setOffset(offset - 100);\r\n   }\r\n\r\n   useEffect(() => {\r\n      const getPosts = async () => {\r\n         const post = await marvel.getAllCreators(offset) //нужна общая функция\r\n         setPosts(post)\r\n      }\r\n      getPosts()\r\n   }, [offset])\r\n\r\n\r\n   const lastPostIndex = currentPage * postsPerPage;\r\n   const firstPostIndex = lastPostIndex - postsPerPage;\r\n   const currentPost = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n   const paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n\r\n   return (\r\n      <div>\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 5570) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n         <ul className='charactersList'>\r\n\r\n            {currentPost.map(item =>\r\n               <li li className='characterCard' >\r\n                  <h3>{item.fullName} (id: {item.id})</h3>\r\n\r\n                  <div className='info'>\r\n\r\n                     <div className='imgInfo'>\r\n                        <img src={`${item.thumbnail.path}.jpg`} alt={item.name} />\r\n                     </div>\r\n\r\n                     <div className='textInfo'>\r\n\r\n                        <details><summary><span>Commics:</span> {item.comics.available}</summary>{item.comics.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Events: </span>{item.events.available}</summary>{item.events.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Series: </span>{item.series.available}</summary>{item.series.items.map(it => <li>- {it.name}</li>)}</details>\r\n\r\n                        <details><summary><span>Stories: </span>{item.stories.available}</summary>{item.stories.items.map(it => <li>- {it.name}</li>)}</details>\r\n                     </div>\r\n                  </div>\r\n\r\n\r\n               </li>)\r\n\r\n            }\r\n\r\n         </ul >\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 5570) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Creators;","import Creators from \"./Creators\";\r\n\r\nexport default Creators;","import React, { useEffect, useState } from 'react';\r\nimport marvel from '../../units/getResource';\r\nimport './Stories.css';\r\nimport Pagination from '../Pagination';\r\n\r\nconst Stories = () => {\r\n\r\n\r\n   const [posts, setPosts] = useState([])\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [postsPerPage] = useState(20)\r\n\r\n   //Пагинация\r\n\r\n   //загрузка +100\r\n   const [offset, setOffset] = useState(0)\r\n\r\n   function increment() {\r\n      setOffset(offset + 100);\r\n   }\r\n   function decrement() {\r\n      setOffset(offset - 100);\r\n   }\r\n\r\n   useEffect(() => {\r\n      const getPosts = async () => {\r\n         const post = await marvel.getAllStories(offset)\r\n         setPosts(post)\r\n      }\r\n      getPosts()\r\n   }, [offset])\r\n\r\n\r\n   const lastPostIndex = currentPage * postsPerPage;\r\n   const firstPostIndex = lastPostIndex - postsPerPage;\r\n   const currentPost = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n   const paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div>\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 115203) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n         <ul className='charactersList'>\r\n\r\n            {currentPost.map(item =>\r\n               <li className='characterCard storyCard' >\r\n\r\n                  <h3>{item.title} (id: {item.id})</h3>\r\n\r\n                  <div className='storyInfo'>\r\n\r\n                     <p><span>Type: </span> {item.type}</p>\r\n\r\n                     <p><span>Original issu: </span> {item.originalIssue.name}</p>\r\n\r\n                     <p>{item.comics.items.map(it => <li><span>Comics: </span>{it.name}</li>)}</p>\r\n\r\n                     <p>{item.series.items.map(it => <li><span>Series: </span>{it.name}</li>)}</p>\r\n\r\n                     <details><summary><span>Creators: </span> {item.creators.available}</summary>{item.creators.items.map(it => <li>- {it.role} {it.name}</li>)}</details>\r\n\r\n                  </div >\r\n               </li >)\r\n\r\n\r\n\r\n            }\r\n\r\n         </ul >\r\n         <div className='wrapperPagination'>\r\n            {(offset > 0) && <button className=\"offset\" onClick={decrement}>&#60;&#60;{offset}</button>}\r\n            <Pagination postsPerPage={postsPerPage}\r\n               totalPosts={posts.length}\r\n               paginate={paginate}\r\n               offset={offset} />\r\n            {(offset < 115203) && <button className=\"offset\" onClick={increment}>{offset + 100}+&#62;&#62;</button>}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Stories;","import Stories from \"./Stories\";\r\n\r\nexport default Stories;","import React from 'react';\nimport Header from './components/Header';\nimport Characters from './components/Characters';\n\nimport Comics from './components/Comics';\nimport Events from './components/Events';\nimport Series from './components/Series';\nimport Creators from './components/Creators';\nimport Stories from './components/Stories';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\n\nfunction App() {\n\n\n\n  return (\n    <Router>\n      <div className=\"App container\">\n        <Header />\n\n        <Switch>\n\n          <Route path=\"/\" exact >\n            <Characters />\n          </Route>\n\n          <Route path='/characters' exact>\n            <Characters />\n          </Route>\n\n          <Route path='/comics' exact >\n            <Comics />\n          </Route>\n\n          <Route path='/series' exact>\n            <Series />\n          </Route>\n\n          <Route path='/events' exact>\n            <Events />\n          </Route>\n\n          <Route path='/stories' exact>\n            <Stories />\n          </Route>\n          .\n          <Route path='/creators' exact>\n            <Creators />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}